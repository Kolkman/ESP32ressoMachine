const configNames=["tset","tband","eqPwr","pgain","igain","dgain","apgain","aigain","adgain","PidInterval","HeaterInterval","sensorSampleInterval","maxCool","powerOffMode"],tuningNames=["tunethres","tunestep","tuningOn"];let configuration={},configerror=!1;function pwrSwitch(){document.getElementById("toggle--pwr").checked?fetch(url+"/api/v1/set?powerOffMode=false"):fetch(url+"/api/v1/set?powerOffMode=true")}function tnrSwitch(){document.getElementById("toggle--tuner").checked?(fetch(url+"/api/v1/set?tuningOn=true"),updateTuningStats()):(fetch(url+"/api/v1/set?tuningOn=false"),fetch(url+"/api/v1/get?pgain&igain&dgain").then((function(e){return e.json()})).then((function(e){let t=document.getElementById("StatsReporting");t.innerHTML="";let n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div");n.textContent="New P: "+e.pgain,t.append(n),o.textContent="New I: "+e.igain,t.append(o),r.textContent="New D: "+e.dgain,t.append(r),setFormValues()})).catch((function(e){})))}function updateTuningStats(){fetch(url+"/api/v1/get?tuningOn&tunestep&tunethres&tuneCount&timeElapsed&averagePeriod&lowerAverage&upperAverage").then((function(e){return e.json()})).then((function(e){if(e.tuningOn){let t=document.getElementById("StatsReporting");t.innerHTML="";let n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");i.textContent="timeElapsed: "+e.timeElapsed,t.append(i),a.textContent="tuneCount: "+e.tuneCount,t.append(a),n.textContent="averagePeriod: "+e.averagePeriod.toPrecision(3),t.append(n),o.textContent="lowerAverage: "+e.lowerAverage.toPrecision(3),t.append(o),r.textContent="upperAverage: "+e.upperAverage.toPrecision(3),t.append(r),setTimeout((function(){updateTuningStats()}),5e3)}})).catch((function(e){}))}function LoadConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?load").then((function(e){return e.json()})).then((function(t){t.load?(e.innerHTML="Config loaded from file",setFormValues()):e.innerHTML="Failed Loading config"}))}function SaveConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?save").then((function(e){return e.json()})).then((function(t){t.save?e.innerHTML="Config saved to file":e.innerHTML="Failed saving config"}))}function DefaultConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?default").then((function(e){return e.json()})).then((function(t){t.default?(e.innerHTML="Config reset to defaults",setFormValues()):e.innerHTML="Failed setting defaults"}))}function setFormValues(){const e=document.getElementById("configForm"),t=document.getElementById("tuningForm");let n=url+"/api/v1/get?";fieldnames=configNames.concat(tuningNames),configNames.concat(tuningNames).forEach((function(e){n+=e+"&"})),n=n.slice(0,-1),fetch(n).then((function(e){return e.json()})).then((function(n){setFormDefaults(n,e,configNames),setFormDefaults(n,t,tuningNames)})).catch((function(e){}))}function setFormDefaults(e,t,n){n.forEach((function(n){if("powerOffMode"==n){let t=document.getElementById("toggle--pwr");e.powerOffMode?t.checked=!1:t.checked=!0}else if("tuningOn"==n){let t=document.getElementById("toggle--tuner");e.tuningOn?(t.checked=!0,updateTuningStats()):t.checked=!1}else void 0!==e[n]&&(t.elements[n].value=e[n],t.elements[n].style.backgroundColor="cornsilk",t.elements[n].addEventListener("click",(function(e){t.elements[n].style.backgroundColor="#E0BFB8"})))})),t==configForm&&(trangemax=document.getElementById("trangemax"),trangemin=document.getElementById("trangemin"),trangemin.innerHTML=e.tset-e.tband,trangemax.innerHTML=e.tset+e.tband)}function GetFormValues(e){if(Errordiv=document.getElementById(this.errordiv),"powerOffMode"==e)return;if("tuningOn"==e)return;const t=this.form.elements[e];let n=parseFloat(t.value);return isNaN(n)?(Errordiv.textContent="Error "+e+" should be a number ("+n+")",t.style.backgroundColor="red",void(configerror=!0)):n<0?(Errordiv.textContent="Error: "+e+" should be positive",t.style.backgroundColor="red",void(configerror=!0)):("tset"===e&&n>110&&(Errordiv.textContent="Warning: tset set to maximum allowed of 110",t.style.backgroundColor="orange",t.value=110,configuration.tset=110),void(configuration[e]=n))}window.addEventListener("load",(function(){fetch(url+"/api/v1/authenticated").then((function(e){return e.json()})).then((function(e){loginRequired=document.getElementById("LoginRequired"),PidConfigParamsForm=document.getElementById("PidConfigParamsForm"),configAPI=document.getElementById("configAPI"),tuningForm=document.getElementById("tuningForm"),e.authenticated?(loginRequired.style.display="none",configAPI.style.display="block",PidConfigParamsForm.style.display="inline-block",tuningForm.style.display="block"):(loginRequired.style.display="block",configAPI.style.display="none",PidConfigParamsForm.style.display="none",tuningForm.style.display="none")})).catch((function(e){})),setFormValues(),configForm.addEventListener("submit",(e=>{e.preventDefault(),configerror=!1;let t={form:configForm,errordiv:"confform-errormessage"};if(configNames.forEach(GetFormValues,t),Errordiv=document.getElementById("confform-errormessage"),!configerror){param=new URLSearchParams(configuration);let e=url+"/api/v1/set?"+param.toString();fetch(e).then((function(e){return e.json()})).then((function(e){0==e.authenticated?Errordiv.textContent="Not Authorized":(setFormDefaults(e,configForm,configNames),Errordiv.textContent="New Values Set")})).catch((function(e){})),setTimeout((function(){Errordiv=document.getElementById("confform-errormessage"),Errordiv.textContent=""}),3e3)}}),!1),tuningForm.addEventListener("submit",(e=>{configerror=!1,e.preventDefault();let t={form:tuningForm,errordiv:"tuneform-errormessage"};if(tuningNames.forEach(GetFormValues,t),!configerror){param=new URLSearchParams(configuration);let e=url+"/api/v1/set?"+param.toString();fetch(e).then((function(e){return e.json()})).then((function(e){setFormDefaults(e,tuningForm,tuningNames)})).catch((function(e){})),Errordiv=document.getElementById("tuneform-errormessage"),Errordiv.textContent="New Values Set[2]"}}),!1)}));