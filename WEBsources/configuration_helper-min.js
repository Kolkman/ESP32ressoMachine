const configNames=["tset","tband","eqPwr","pgain","igain","dgain","apgain","aigain","adgain","PidInterval","HeaterInterval","sensorSampleInterval","maxCool","powerOffMode"],tuningNames=["tunethres","tunestep","tuningOn"];var configuration={},configerror=!1;function pwrSwitch(){document.getElementById("toggle--pwr").checked?fetch(url+"/api/v1/set?powerOffMode=false"):fetch(url+"/api/v1/set?powerOffMode=true")}function tnrSwitch(){document.getElementById("toggle--tuner").checked?(fetch(url+"/api/v1/set?tuningOn=true"),updateTuningStats()):(fetch(url+"/api/v1/set?tuningOn=false"),fetch(url+"/api/v1/get?pgain&igain&dgain").then((function(e){return e.json()})).then((function(e){let n=document.getElementById("StatsReporting");n.innerHTML="";let t=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div");t.textContent="New P: "+e.pgain,n.append(t),o.textContent="New I: "+e.igain,n.append(o),r.textContent="New D: "+e.dgain,n.append(r),setFormValues()})).catch((function(e){})))}function updateTuningStats(){fetch(url+"/api/v1/get?tuningOn&tunestep&tunethres&tuneCount&timeElapsed&averagePeriod&lowerAverage&upperAverage").then((function(e){return e.json()})).then((function(e){if(e.tuningOn){let n=document.getElementById("StatsReporting");n.innerHTML="";let t=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");i.textContent="timeElapsed: "+e.timeElapsed,n.append(i),a.textContent="tuneCount: "+e.tuneCount,n.append(a),t.textContent="averagePeriod: "+e.averagePeriod.toPrecision(3),n.append(t),o.textContent="lowerAverage: "+e.lowerAverage.toPrecision(3),n.append(o),r.textContent="upperAverage: "+e.upperAverage.toPrecision(3),n.append(r),setTimeout((function(){updateTuningStats()}),5e3)}})).catch((function(e){}))}function LoadConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?load").then((function(e){return e.json()})).then((function(n){n.load?(e.innerHTML="Config loaded from file",setFormValues()):e.innerHTML="Failed Loading config"}))}function SaveConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?save").then((function(e){return e.json()})).then((function(n){n.save?e.innerHTML="Config saved to file":e.innerHTML="Failed saving config"}))}function DefaultConf(){document.getElementById("configForm");let e=document.getElementById("ConfigReporting");fetch(url+"/api/v1/config?default").then((function(e){return e.json()})).then((function(n){n.default?(e.innerHTML="Config reset to defaults",setFormValues()):e.innerHTML="Failed setting defaults"}))}function setFormValues(){const e=document.getElementById("configForm"),n=document.getElementById("tuningForm");var t=url+"/api/v1/get?";fieldnames=configNames.concat(tuningNames),configNames.concat(tuningNames).forEach((function(e){t+=e+"&"})),t=t.slice(0,-1),fetch(t).then((function(e){return e.json()})).then((function(t){setFormDefaults(t,e,configNames),setFormDefaults(t,n,tuningNames)})).catch((function(e){}))}function setFormDefaults(e,n,t){t.forEach((function(t){if("powerOffMode"==t){var o=document.getElementById("toggle--pwr");e.powerOffMode?o.checked=!1:o.checked=!0}else if("tuningOn"==t){var r=document.getElementById("toggle--tuner");e.tuningOn?(r.checked=!0,updateTuningStats()):r.checked=!1}else void 0!==e[t]&&(n.elements[t].value=e[t],n.elements[t].style.backgroundColor="cornsilk",n.elements[t].addEventListener("click",(function(e){n.elements[t].style.backgroundColor="#E0BFB8"})))})),n==configForm&&(trangemax=document.getElementById("trangemax"),trangemin=document.getElementById("trangemin"),trangemin.innerHTML=e.tset-e.tband,trangemax.innerHTML=e.tset+e.tband)}function GetFormValues(e){if(Errordiv=document.getElementById(this.errordiv),"powerOffMode"==e)return;if("tuningOn"==e)return;const n=this.form.elements[e];var t=parseFloat(n.value);return isNaN(t)?(Errordiv.textContent="Error "+e+"should be a number ("+t+")",n.style.backgroundColor="red",void(configerror=!0)):t<0?(Errordiv.textContent="Error: "+e+" should be positive",n.style.backgroundColor="red",void(configerror=!0)):("tset"===e&&t>110&&(Errordiv.textContent="Warning: tset set to maximum allowed of 110",n.style.backgroundColor="orange",n.value=110,configuration.tset=110),void(configuration[e]=t))}window.addEventListener("load",(function(){setFormValues(),configForm.addEventListener("submit",(e=>{e.preventDefault(),configerror=!1;var n={form:configForm,errordiv:"confform-errormessage"};if(configNames.forEach(GetFormValues,n),!configerror){param=new URLSearchParams(configuration);var t=url+"/api/v1/set?"+param.toString();fetch(t).then((function(e){return e.json()})).then((function(e){setFormDefaults(e,configForm,configNames)})).catch((function(e){})),Errordiv=document.getElementById("confform-errormessage"),Errordiv.textContent="New Values Set"}}),!1),tuningForm.addEventListener("submit",(e=>{configerror=!1,e.preventDefault();var n={form:tuningForm,errordiv:"tuneform-errormessage"};if(tuningNames.forEach(GetFormValues,n),!configerror){param=new URLSearchParams(configuration);var t=url+"/api/v1/set?"+param.toString();fetch(t).then((function(e){return e.json()})).then((function(e){setFormDefaults(e,tuningForm,tuningNames)})).catch((function(e){})),Errordiv=document.getElementById("tuneform-errormessage"),Errordiv.textContent="New Values Set"}}),!1)}));